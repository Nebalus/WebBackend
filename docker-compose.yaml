version: "3.8"

services:

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./public:/var/www/html/public:ro
    depends_on:
      - php
      - mysql

  # INTERN PORT: 9000
  php:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    volumes:
      - ./src:/var/www/html/src:ro
      - ./tests:/var/www/html/tests:ro
      - ./public:/var/www/html/public:ro
      - ./vendor:/var/www/html/vendor:ro
      - ./config:/var/www/html/config:ro
      - ./composer.json:/var/www/html/composer.json:ro
      - ./composer.lock:/var/www/html/composer.lock:ro
      - ./phpcs.xml:/var/www/html/phpcs.xml:ro
      - ./phpunit.xml:/var/www/html/phpunit.xml:ro
    depends_on:
      - mysql

  # INTERN PORT: 3306
  mysql:
    build:
      context: .
      dockerfile: docker/mysql/Dockerfile
    command: --default-authentication-plugin=mysql_native_password --collation-server=utf8mb4_0900_ai_ci
    environment:
      MYSQL_ROOT_PASSWORD: NUTELLA
      MYSQL_USER: admin
      MYSQL_PASSWORD: 1234
      MYSQL_DATABASE: todo
    volumes:
      - mysql-data:/var/lib/mysql
#      - ./data/sql:/docker-entrypoint-initdb.d

volumes:
  mysql-data:
